source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
?grid.arrange
grid.arrange(grobs = rlist, padding = unit(0.0, "cm"), ncol = 1, top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3)))
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
grid.arrange(grobs = rlist, padding = unit(0.0, "cm"), ncol = 1, top = textGrob("Daily QC: Blue",gp=gpar(fontsize=20,font=3)))
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Bullet Graphs/Bullet_Graphs.R', echo=TRUE)
1:n %>% exp(n - .)
n = 27
1:n %>% exp(n - .)
{1:n} %>% exp(n - .)
{1:n} %>% {exp(n - .)}
n = 27
w = .36
x = 1:n
x = exp(w * (n - x))
x[1:(n- 7)] <- 0
x = x / sum(x)
x
x = 1:n
x = exp(w * (n - x))
x
x = 1:n
x = exp(-w * (n - x))
x
x[1:(n- 7)] <- 0
x
x = x / sum(x)
x
dirname(rstudioapi::getSourceEditorContext()$path)
# File for generating testing data for a Gaussian Process
blue = dirname(rstudioapi::getSourceEditorContext()$path)
blue
# File for generating testing data for a Gaussian Process
dirname(rstudioapi::getSourceEditorContext()$path)
plot(x,y)
write.csv(x = data.frame(x = x, y = y), file = "./gp_sample_data.csv")
source('C:/Users/mtkur/Dropbox/Coding & Data Projects/Yash_Programming_Party/Gaussian_Processes/src/generate_gaussian_process_test_data.R', echo=TRUE)
shiny::runApp('C:/Users/mtkur/Dropbox/Graduate School/10) Shiny Apps/Multiple Population Bias')
runApp('C:/Users/mtkur/Dropbox/Graduate School/10) Shiny Apps/Multiple Population Bias')
runApp('C:/Users/mtkur/Dropbox/Graduate School/10) Shiny Apps/Stats 250 Demos')
install.packages("latex2exp")
runApp('C:/Users/mtkur/Dropbox/Graduate School/10) Shiny Apps/Stats 250 Demos')
# Read in the data
dat <- read.csv("gp_sample_data.csv")
dat
# Write the data to the outfile
write.csv(x = data.frame(x = x, y = y), file = "./gp_sample_data.csv", row.names = F)
# File for generating testing data for a Gaussian Process
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list = ls())
set.seed(123)
library(magrittr)
library(mvtnorm)
library(ggplot2)
library(MASS)
library(plyr)
library(dplyr)
# PARAMS
noise_variance = 0
# Generate the sample data
fx <- function(x)
{
cos(3 * x) + x^(1/2) - sin(x)
}
x = seq(1, 10, length = 30)
y = fx(x) + rnorm(length(x), 0, noise_variance)
plot(x,y)
# Write the data to the outfile
write.csv(x = data.frame(x = x, y = y), file = "./gp_sample_data.csv", row.names = F)
# Generate a sample covariance file
sink("./config_covariance.txt")
cat("CovFxn:squared_exp|Length:2|")
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(magrittr)
library(mvtnorm)
library(ggplot2)
library(MASS)
library(plyr)
library(dplyr)
set.seed(123)
# Read in the data
dat <- read.csv("gp_sample_data.csv")
x = dat$x
y = dat$y
x
x
# Read in the data
dat <- read.csv("gp_sample_data.csv")
x = dat$x
y = dat$y
x
x
print(x)
